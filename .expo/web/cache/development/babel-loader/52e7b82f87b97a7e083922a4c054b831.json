{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\Projects\\\\ZENE\\\\C68-transaction-and-search\\\\screens\\\\SearchScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport db from \"../config\";\n\nvar Searchscreen = function (_React$Component) {\n  _inherits(Searchscreen, _React$Component);\n\n  var _super = _createSuper(Searchscreen);\n\n  function Searchscreen() {\n    var _this;\n\n    _classCallCheck(this, Searchscreen);\n\n    _this = _super.call(this);\n\n    _this.componentDidMount = function _callee() {\n      var query;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"transaction\").limit(10).get());\n\n            case 2:\n              query = _context.sent;\n              query.docs.map(function (doc) {\n                _this.setState({\n                  allTransaction: [],\n                  lastTransaction: doc\n                });\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.searchTransaction = function _callee2(text) {\n      var enterText, query;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              enterText = text.split(\"\");\n\n              if (!(enterText[0].toUpperCase() === \"B\")) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(db.collection(\"transaction\").where(\"bookId\", \"==\", text).get());\n\n            case 4:\n              query = _context2.sent;\n              query.docs.map(function (doc) {\n                _this.setState({\n                  allTransaction: [].concat(_toConsumableArray(_this.state.allTransaction), [doc.data()]),\n                  lastTransaction: doc\n                });\n              });\n\n            case 6:\n              if (!(enterText[0].toUpperCase() === \"S\")) {\n                _context2.next = 11;\n                break;\n              }\n\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(db.collection(\"bookAvailability\").where(\"studentId\", \"==\", text).get());\n\n            case 9:\n              query = _context2.sent;\n              query.docs.map(function (doc) {\n                _this.setState({\n                  allTransaction: [].concat(_toConsumableArray(_this.state.allTransaction), [doc.data()]),\n                  lastTransaction: doc\n                });\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      allTransaction: [],\n      search: \"\",\n      lastTransaction: null\n    };\n    return _this;\n  }\n\n  _createClass(Searchscreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.bar,\n        placeholder: \"Enter Id\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            search: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.searchButton,\n        onPress: function onPress() {\n          _this2.searchTransaction(_this2.state.search);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, \"search\")), React.createElement(FlatList, {\n        data: this.state.allTransaction,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          React.createElement(View, {\n            style: {\n              borderWidth: 3\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 13\n            }\n          }, React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 14\n            }\n          }, \"bookId:\" + item.bookId), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 14\n            }\n          }, \"StudentkId:\" + item.StudentId), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 14\n            }\n          }, \"TransactionType:\" + item.transactionType), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 14\n            }\n          }, \"Date:\" + item.date.toDate()));\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          index.toString();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return Searchscreen;\n}(React.Component);\n\nexport { Searchscreen as default };\nvar styles = StyleSheet.create({\n  searchBar: {\n    flexDirection: 'row',\n    height: 40,\n    width: 'auto',\n    borderWidth: 0.5,\n    alignItems: 'center',\n    backgroundColor: 'grey'\n  },\n  bar: {\n    borderWidth: 2,\n    height: 30,\n    width: 300,\n    paddingLeft: 10,\n    marginTop: 200\n  },\n  searchButton: {\n    borderWidth: 1,\n    height: 30,\n    width: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'green'\n  }\n});","map":{"version":3,"sources":["E:/Projects/ZENE/C68-transaction-and-search/screens/SearchScreen.js"],"names":["React","db","Searchscreen","componentDidMount","collection","limit","get","query","docs","map","doc","setState","allTransaction","lastTransaction","searchTransaction","text","enterText","split","toUpperCase","where","state","data","search","flex","justifyContent","alignItems","styles","bar","searchButton","item","borderWidth","bookId","StudentId","transactionType","date","toDate","index","toString","Component","StyleSheet","create","searchBar","flexDirection","height","width","backgroundColor","paddingLeft","marginTop"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAEA,OAAOC,EAAP;;IAEqBC,Y;;;;;AACnB,0BAAa;AAAA;;AAAA;;AACX;;AADW,UAQbC,iBARa,GAQK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACEF,EAAE,CAACG,UAAH,CAAc,aAAd,EAA6BC,KAA7B,CAAmC,EAAnC,EAAuCC,GAAvC,EADF;;AAAA;AACZC,cAAAA,KADY;AAEhBA,cAAAA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,UAACC,GAAD,EAAO;AACpB,sBAAKC,QAAL,CAAc;AACZC,kBAAAA,cAAc,EAAC,EADH;AAEZC,kBAAAA,eAAe,EAACH;AAFJ,iBAAd;AAID,eALD;;AAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KARL;;AAAA,UAkBbI,iBAlBa,GAkBK,kBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,cAAAA,SADY,GACFD,IAAI,CAACE,KAAL,CAAW,EAAX,CADE;;AAAA,oBAEbD,SAAS,CAAC,CAAD,CAAT,CAAaE,WAAb,OAA8B,GAFjB;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAGIjB,EAAE,CAACG,UAAH,CAAc,aAAd,EAA6Be,KAA7B,CAAmC,QAAnC,EAA4C,IAA5C,EAAiDJ,IAAjD,EAAuDT,GAAvD,EAHJ;;AAAA;AAGVC,cAAAA,KAHU;AAIdA,cAAAA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,UAACC,GAAD,EAAO;AACpB,sBAAKC,QAAL,CAAc;AACZC,kBAAAA,cAAc,+BAAK,MAAKQ,KAAL,CAAWR,cAAhB,IAA+BF,GAAG,CAACW,IAAJ,EAA/B,EADF;AAEZR,kBAAAA,eAAe,EAACH;AAFJ,iBAAd;AAID,eALD;;AAJc;AAAA,oBAWbM,SAAS,CAAC,CAAD,CAAT,CAAaE,WAAb,OAA6B,GAXhB;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAYIjB,EAAE,CAACG,UAAH,CAAc,kBAAd,EAAkCe,KAAlC,CAAwC,WAAxC,EAAoD,IAApD,EAAyDJ,IAAzD,EAA+DT,GAA/D,EAZJ;;AAAA;AAYVC,cAAAA,KAZU;AAadA,cAAAA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,UAACC,GAAD,EAAO;AACpB,sBAAKC,QAAL,CAAc;AACZC,kBAAAA,cAAc,+BAAK,MAAKQ,KAAL,CAAWR,cAAhB,IAA+BF,GAAG,CAACW,IAAJ,EAA/B,EADF;AAEZR,kBAAAA,eAAe,EAACH;AAFJ,iBAAd;AAID,eALD;;AAbc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAlBL;;AAEX,UAAKU,KAAL,GAAW;AACTR,MAAAA,cAAc,EAAC,EADN;AAETU,MAAAA,MAAM,EAAC,EAFE;AAGTT,MAAAA,eAAe,EAAC;AAHP,KAAX;AAFW;AAOZ;;;;6BAgCU;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEU,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,cAAc,EAAE,QAA3B;AAAqCC,UAAAA,UAAU,EAAE;AAAjD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACA,QAAA,KAAK,EAAEC,MAAM,CAACC,GADd;AAEA,QAAA,WAAW,EAAC,UAFZ;AAGA,QAAA,YAAY,EAAE,sBAACZ,IAAD,EAAQ;AACrB,UAAA,MAAI,CAACJ,QAAL,CAAc;AACZW,YAAAA,MAAM,EAACP;AADK,WAAd;AAGA,SAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAUE,oBAAC,gBAAD;AACA,QAAA,KAAK,EAAEW,MAAM,CAACE,YADd;AAEA,QAAA,OAAO,EAAE,mBAAI;AAAC,UAAA,MAAI,CAACd,iBAAL,CAAuB,MAAI,CAACM,KAAL,CAAWE,MAAlC;AAA0C,SAFxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CAVF,EAgBE,oBAAC,QAAD;AACA,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWR,cADjB;AAEA,QAAA,UAAU,EAAE,0BAAU;AAAA,cAARiB,IAAQ,QAARA,IAAQ;AACpB,8BAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAACC,cAAAA,WAAW,EAAC;AAAb,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAO,YAAWD,IAAI,CAACE,MAAvB,CADD,EAEC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAO,gBAAeF,IAAI,CAACG,SAA3B,CAFD,EAGC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAO,qBAAoBH,IAAI,CAACI,eAAhC,CAHD,EAIC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAO,UAASJ,IAAI,CAACK,IAAL,CAAUC,MAAV,EAAhB,CAJD;AAMD,SATD;AAUA,QAAA,YAAY,EAAE,sBAACN,IAAD,EAAMO,KAAN,EAAc;AAC1BA,UAAAA,KAAK,CAACC,QAAN;AACC,SAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBF,CADF;AAiCD;;;;EA1EqCrC,KAAK,CAACsC,S;;SAA3BpC,Y;AA4EnB,IAAMwB,MAAM,GAACa,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAC;AAAEC,IAAAA,aAAa,EAAC,KAAhB;AAAuBC,IAAAA,MAAM,EAAC,EAA9B;AAAkCC,IAAAA,KAAK,EAAC,MAAxC;AAAgDd,IAAAA,WAAW,EAAC,GAA5D;AAAiEL,IAAAA,UAAU,EAAC,QAA5E;AAAsFoB,IAAAA,eAAe,EAAC;AAAtG,GADmB;AAE7BlB,EAAAA,GAAG,EAAC;AAAEG,IAAAA,WAAW,EAAC,CAAd;AAAiBa,IAAAA,MAAM,EAAC,EAAxB;AAA4BC,IAAAA,KAAK,EAAC,GAAlC;AAAuCE,IAAAA,WAAW,EAAC,EAAnD;AAAsDC,IAAAA,SAAS,EAAC;AAAhE,GAFyB;AAG7BnB,EAAAA,YAAY,EAAC;AAAEE,IAAAA,WAAW,EAAC,CAAd;AAAiBa,IAAAA,MAAM,EAAC,EAAxB;AAA4BC,IAAAA,KAAK,EAAC,EAAlC;AAAsCnB,IAAAA,UAAU,EAAC,QAAjD;AAA2DD,IAAAA,cAAc,EAAC,QAA1E;AAAoFqB,IAAAA,eAAe,EAAC;AAApG;AAHgB,CAAlB,CAAb","sourcesContent":["import React from 'react';\r\nimport { Text, View,TextInput,TouchableOpacity,FlatList,StyleSheet } from 'react-native';\r\nimport db from \"../config\"\r\n\r\nexport default class Searchscreen extends React.Component {\r\n  constructor(){\r\n    super()\r\n    this.state={\r\n      allTransaction:[],\r\n      search:\"\",\r\n      lastTransaction:null\r\n  }\r\n  }\r\n  componentDidMount=async()=>{\r\n    var query = await db.collection(\"transaction\").limit(10).get()\r\n    query.docs.map((doc)=>{\r\n      this.setState({\r\n        allTransaction:[],\r\n        lastTransaction:doc\r\n      })\r\n    })\r\n  }\r\n\r\n  searchTransaction=async(text)=>{\r\n    var enterText=text.split(\"\")\r\n    if(enterText[0].toUpperCase() ===\"B\"){\r\n      var query = await db.collection(\"transaction\").where(\"bookId\",\"==\",text).get()\r\n      query.docs.map((doc)=>{\r\n        this.setState({\r\n          allTransaction:[...this.state.allTransaction,doc.data()],\r\n          lastTransaction:doc\r\n        })\r\n      })\r\n    }\r\n    if(enterText[0].toUpperCase()===\"S\"){\r\n      var query = await db.collection(\"bookAvailability\").where(\"studentId\",\"==\",text).get()\r\n      query.docs.map((doc)=>{\r\n        this.setState({\r\n          allTransaction:[...this.state.allTransaction,doc.data()],\r\n          lastTransaction:doc\r\n        })\r\n      })\r\n    }\r\n  }\r\n    render() {\r\n      return (\r\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n          <TextInput \r\n          style={styles.bar}\r\n          placeholder=\"Enter Id\"\r\n          onChangeText={(text)=>{\r\n           this.setState({\r\n             search:text\r\n           }) \r\n          }}/>\r\n\r\n          <TouchableOpacity\r\n          style={styles.searchButton}\r\n          onPress={()=>{this.searchTransaction(this.state.search)}}>\r\n            <Text>search</Text>\r\n          </TouchableOpacity>\r\n\r\n          <FlatList\r\n          data={this.state.allTransaction}\r\n          renderItem={({item})=>{\r\n            <View style={{borderWidth:3}}>\r\n             <Text>{\"bookId:\"+ item.bookId}</Text>\r\n             <Text>{\"StudentkId:\"+ item.StudentId}</Text>\r\n             <Text>{\"TransactionType:\"+ item.transactionType}</Text>\r\n             <Text>{\"Date:\"+ item.date.toDate()}</Text>\r\n            </View>\r\n          }}\r\n          keyExtractor={(item,index)=>{\r\n            index.toString()\r\n            }}/>\r\n\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n  const styles=StyleSheet.create({\r\n    searchBar:{ flexDirection:'row', height:40, width:'auto', borderWidth:0.5, alignItems:'center', backgroundColor:'grey', }, \r\n    bar:{ borderWidth:2, height:30, width:300, paddingLeft:10,marginTop:200 }, \r\n    searchButton:{ borderWidth:1, height:30, width:50, alignItems:'center', justifyContent:'center', backgroundColor:'green' }\r\n  })"]},"metadata":{},"sourceType":"module"}