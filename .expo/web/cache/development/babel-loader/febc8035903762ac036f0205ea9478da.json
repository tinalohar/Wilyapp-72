{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\Projects\\\\ZENE\\\\C68-transaction-and-search\\\\screens\\\\BookTransactionScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport * as firebase from 'firebase';\nimport db from \"../config.js\";\n\nvar TransactionScreen = function (_React$Component) {\n  _inherits(TransactionScreen, _React$Component);\n\n  var _super = _createSuper(TransactionScreen);\n\n  function TransactionScreen() {\n    var _this;\n\n    _classCallCheck(this, TransactionScreen);\n\n    _this = _super.call(this);\n\n    _this.getCameraPermissions = function _callee(id) {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                buttonState: id,\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data, buttonState;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n              buttonState = _this.state.buttonState;\n\n              if (buttonState === \"BookId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedBookId: data,\n                  buttonState: 'normal'\n                });\n              } else if (buttonState === \"StudentId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedStudentId: data,\n                  buttonState: 'normal'\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.initiateBookIssue = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              db.collection(\"transactions\").add({\n                'studentId': _this.state.scannedStudentId,\n                'bookId': _this.state.scannedBookId,\n                'date': firebase.firestore.Timestamp.now().toDate(),\n                'transactionType': \"Issue\"\n              });\n              db.collection(\"books\").doc(_this.state.scannedBookId).update({\n                'bookAvailability': false\n              });\n              db.collection(\"student\").doc(_this.state.scannedStudentId).update({\n                'numberOfBooksIssued': firebase.firestore.FieldValue.increment(1)\n              });\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.initiateBookReturn = function _callee4() {\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              db.collection(\"transactions\").add({\n                'StudentId': _this.state.scannedStudentId,\n                'bookId': _this.state.scannedBookId,\n                'date': firebase.firestore.Timestamp.now().toDate(),\n                'transactionType': \"Return\"\n              });\n              db.collection(\"books\").doc(_this.state.scannedBookId).update({\n                'bookAvailability': true\n              });\n              db.collection(\"student\").doc(_this.state.scannedStudentId).update({\n                'numberOfBooksIssued': firebase.firestore.FieldValue.increment(-1)\n              });\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkBookEligibility = function _callee5() {\n      var transactionType, bookRef;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              transactionType = null;\n              _context5.next = 3;\n              return _regeneratorRuntime.awrap(db.collection(\"books\").where(\"bookId\", \"==\", _this.state.scannedBookId).get());\n\n            case 3:\n              bookRef = _context5.sent;\n\n              if (bookRef.docs.length == 0) {\n                transactionType = false;\n              } else {\n                bookRef.docs.map(function (doc) {\n                  var book = doc.data();\n\n                  if (book.bookAvailability) {\n                    transactionType = \"Issue\";\n                  } else {\n                    transactionType = \"Return\";\n                  }\n                });\n              }\n\n              return _context5.abrupt(\"return\", transactionType);\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkStudentEligibilityIssue = function _callee6() {\n      var studentEligible, studentRef;\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              studentEligible = null;\n              alert(_this.state.scannedStudentId);\n              _context6.next = 4;\n              return _regeneratorRuntime.awrap(db.collection(\"students\").where(\"studentId\", \"==\", _this.state.scannedStudentId).get());\n\n            case 4:\n              studentRef = _context6.sent;\n              alert(studentRef.docs.length);\n\n              if (studentRef.docs.length == 0) {\n                studentEligible = false;\n                alert(\"This student doesn't exist\");\n\n                _this.setState({\n                  scannedStudentId: \"\",\n                  scannedBookId: \"\"\n                });\n              } else {\n                studentRef.docs.map(function (doc) {\n                  var student = doc.data();\n\n                  if (student.numberOfBooksIssued < 2) {\n                    studentEligible = true;\n                  } else {\n                    studentEligible = false;\n                    alert(\"Student has already issued 2 books\");\n\n                    _this.setState({\n                      scannedStudentId: \"\",\n                      scannedBookId: \"\"\n                    });\n                  }\n                });\n              }\n\n              return _context6.abrupt(\"return\", studentEligible);\n\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkStudentEligibilityReturn = function _callee7() {\n      var studentEligible, transactionRef;\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              studentEligible = null;\n              _context7.next = 3;\n              return _regeneratorRuntime.awrap(db.collection(\"transactions\").where(\"bookId\", \"==\", _this.state.scannedBookId).limit(1).get());\n\n            case 3:\n              transactionRef = _context7.sent;\n              transactionRef.docs.map(function (doc) {\n                var lastBook = doc.data();\n\n                if (lastBook.StudentId == _this.state.scannedStudentId) {\n                  studentEligible = true;\n                } else {\n                  studentEligible = false;\n                  alert(\"Book wasn't issued by this student\");\n\n                  _this.setState({\n                    scannedStudentId: \"\",\n                    scannedBookId: \"\"\n                  });\n                }\n              });\n              return _context7.abrupt(\"return\", studentEligible);\n\n            case 6:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleTransaction = function _callee8() {\n      var transactionType, studentEligible;\n      return _regeneratorRuntime.async(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return _regeneratorRuntime.awrap(_this.checkBookEligibility());\n\n            case 2:\n              transactionType = _context8.sent;\n\n              if (transactionType) {\n                _context8.next = 8;\n                break;\n              }\n\n              alert(\"Book doesn't exist in this database\");\n\n              _this.setState({\n                scannedBookId: \"\",\n                scannedStudentId: \"\"\n              });\n\n              _context8.next = 20;\n              break;\n\n            case 8:\n              if (!(transactionType === \"Issue\")) {\n                _context8.next = 15;\n                break;\n              }\n\n              _context8.next = 11;\n              return _regeneratorRuntime.awrap(_this.checkStudentEligibilityIssue());\n\n            case 11:\n              studentEligible = _context8.sent;\n\n              if (studentEligible) {\n                _this.initiateBookIssue();\n\n                alert(\"Book issued to this student\");\n              }\n\n              _context8.next = 20;\n              break;\n\n            case 15:\n              if (!(transactionType === \"Return\")) {\n                _context8.next = 20;\n                break;\n              }\n\n              _context8.next = 18;\n              return _regeneratorRuntime.awrap(_this.checkStudentEligibilityReturn());\n\n            case 18:\n              studentEligible = _context8.sent;\n\n              if (studentEligible) {\n                _this.initiateBookReturn();\n\n                alert(\"Book returned by this student\");\n              }\n\n            case 20:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedBookId: '',\n      scannedStudentId: '',\n      buttonState: 'normal',\n      transactionMessage: ''\n    };\n    return _this;\n  }\n\n  _createClass(TransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hasCameraPermissions = this.state.hasCameraPermissions;\n      var scanned = this.state.scanned;\n      var buttonState = this.state.buttonState;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions) {\n        return React.createElement(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 11\n          }\n        });\n      } else if (buttonState === \"normal\") {\n        return React.createElement(KeyboardAvoidingView, {\n          style: styles.container,\n          behavior: \"padding\",\n          enabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/booklogo.jpg\"),\n          style: {\n            width: 200,\n            height: 200\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }\n        }), React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            fontSize: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }\n        }, \"Wily\")), React.createElement(View, {\n          style: styles.inputView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Book Id\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              scannedBookId: text\n            });\n          },\n          value: this.state.scannedBookId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"BookId\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }\n        }, \"Scan\"))), React.createElement(View, {\n          style: styles.inputView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Student Id\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              scannedStudentId: text\n            });\n          },\n          value: this.state.scannedStudentId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"StudentId\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }\n        }, \"Scan\"))), React.createElement(TouchableOpacity, {\n          style: styles.submitButton,\n          onPress: function _callee9() {\n            var transactionMessage;\n            return _regeneratorRuntime.async(function _callee9$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    transactionMessage = _this2.handleTransaction();\n\n                    _this2.setState({\n                      scannedBookId: '',\n                      scannedStudentId: ''\n                    });\n\n                  case 2:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.submitButtonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 11\n          }\n        }, \"Submit\")));\n      }\n    }\n  }]);\n\n  return TransactionScreen;\n}(React.Component);\n\nexport { TransactionScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  displayText: {\n    fontSize: 15,\n    textDecorationLine: 'underline'\n  },\n  scanButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    margin: 10\n  },\n  buttonText: {\n    fontSize: 15,\n    textAlign: 'center',\n    marginTop: 10\n  },\n  inputView: {\n    flexDirection: 'row',\n    margin: 20\n  },\n  inputBox: {\n    width: 200,\n    height: 40,\n    borderWidth: 1.5,\n    borderRightWidth: 0,\n    fontSize: 20\n  },\n  scanButton: {\n    backgroundColor: '#66BB6A',\n    width: 50,\n    borderWidth: 1.5,\n    borderLeftWidth: 0\n  },\n  submitButton: {\n    backgroundColor: '#FBC02D',\n    width: 100,\n    height: 50\n  },\n  submitButtonText: {\n    padding: 10,\n    textAlign: 'center',\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["E:/Projects/ZENE/C68-transaction-and-search/screens/BookTransactionScreen.js"],"names":["React","Permissions","BarCodeScanner","firebase","db","TransactionScreen","getCameraPermissions","id","askAsync","CAMERA","status","setState","hasCameraPermissions","buttonState","scanned","handleBarCodeScanned","type","data","state","scannedBookId","scannedStudentId","initiateBookIssue","collection","add","firestore","Timestamp","now","toDate","doc","update","FieldValue","increment","initiateBookReturn","checkBookEligibility","transactionType","where","get","bookRef","docs","length","map","book","bookAvailability","checkStudentEligibilityIssue","studentEligible","alert","studentRef","student","numberOfBooksIssued","checkStudentEligibilityReturn","limit","transactionRef","lastBook","StudentId","handleTransaction","transactionMessage","undefined","StyleSheet","absoluteFillObject","styles","container","require","width","height","textAlign","fontSize","inputView","inputBox","text","scanButton","buttonText","submitButton","submitButtonText","Component","create","flex","justifyContent","alignItems","displayText","textDecorationLine","backgroundColor","padding","margin","marginTop","flexDirection","borderWidth","borderRightWidth","borderLeftWidth","fontWeight","color"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;;;AASA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,EAAP;;IAEqBC,iB;;;;;AACjB,+BAAa;AAAA;;AAAA;;AACX;;AADW,UAYbC,oBAZa,GAYU,iBAAOC,EAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACEN,WAAW,CAACO,QAAZ,CAAqBP,WAAW,CAACQ,MAAjC,CADF;;AAAA;AAAA;AACdC,cAAAA,MADc,yBACdA,MADc;;AAGrB,oBAAKC,QAAL,CAAc;AAIZC,gBAAAA,oBAAoB,EAAEF,MAAM,KAAK,SAJrB;AAKZG,gBAAAA,WAAW,EAAEN,EALD;AAMZO,gBAAAA,OAAO,EAAE;AANG,eAAd;;AAHqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAZV;;AAAA,UAyBbC,oBAzBa,GAyBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOC,cAAAA,IAAP,QAAOA,IAAP,EAAaC,IAAb,QAAaA,IAAb;AACdJ,cAAAA,WADc,GACC,MAAKK,KADN,CACdL,WADc;;AAGrB,kBAAGA,WAAW,KAAG,QAAjB,EAA0B;AACxB,sBAAKF,QAAL,CAAc;AACZG,kBAAAA,OAAO,EAAE,IADG;AAEZK,kBAAAA,aAAa,EAAEF,IAFH;AAGZJ,kBAAAA,WAAW,EAAE;AAHD,iBAAd;AAKD,eAND,MAOK,IAAGA,WAAW,KAAG,WAAjB,EAA6B;AAChC,sBAAKF,QAAL,CAAc;AACZG,kBAAAA,OAAO,EAAE,IADG;AAEZM,kBAAAA,gBAAgB,EAAEH,IAFN;AAGZJ,kBAAAA,WAAW,EAAE;AAHD,iBAAd;AAKD;;AAhBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAzBV;;AAAA,UA6CbQ,iBA7Ca,GA6CO;AAAA;AAAA;AAAA;AAAA;AAElBjB,cAAAA,EAAE,CAACkB,UAAH,CAAc,cAAd,EAA8BC,GAA9B,CAAkC;AAChC,6BAAa,MAAKL,KAAL,CAAWE,gBADQ;AAEhC,0BAAW,MAAKF,KAAL,CAAWC,aAFU;AAGhC,wBAAShB,QAAQ,CAACqB,SAAT,CAAmBC,SAAnB,CAA6BC,GAA7B,GAAmCC,MAAnC,EAHuB;AAIhC,mCAAmB;AAJa,eAAlC;AAOAvB,cAAAA,EAAE,CAACkB,UAAH,CAAc,OAAd,EAAuBM,GAAvB,CAA2B,MAAKV,KAAL,CAAWC,aAAtC,EAAqDU,MAArD,CAA4D;AAC1D,oCAAoB;AADsC,eAA5D;AAIAzB,cAAAA,EAAE,CAACkB,UAAH,CAAc,SAAd,EAAyBM,GAAzB,CAA6B,MAAKV,KAAL,CAAWE,gBAAxC,EAA0DS,MAA1D,CAAiE;AAC/D,uCAAuB1B,QAAQ,CAACqB,SAAT,CAAmBM,UAAnB,CAA8BC,SAA9B,CAAwC,CAAxC;AADwC,eAAjE;;AAbkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA7CP;;AAAA,UA+DbC,kBA/Da,GA+DQ;AAAA;AAAA;AAAA;AAAA;AAEnB5B,cAAAA,EAAE,CAACkB,UAAH,CAAc,cAAd,EAA8BC,GAA9B,CAAkC;AAChC,6BAAa,MAAKL,KAAL,CAAWE,gBADQ;AAEhC,0BAAW,MAAKF,KAAL,CAAWC,aAFU;AAGhC,wBAAShB,QAAQ,CAACqB,SAAT,CAAmBC,SAAnB,CAA6BC,GAA7B,GAAmCC,MAAnC,EAHuB;AAIhC,mCAAmB;AAJa,eAAlC;AAOAvB,cAAAA,EAAE,CAACkB,UAAH,CAAc,OAAd,EAAuBM,GAAvB,CAA2B,MAAKV,KAAL,CAAWC,aAAtC,EAAqDU,MAArD,CAA4D;AAC1D,oCAAoB;AADsC,eAA5D;AAIAzB,cAAAA,EAAE,CAACkB,UAAH,CAAc,SAAd,EAAyBM,GAAzB,CAA6B,MAAKV,KAAL,CAAWE,gBAAxC,EAA0DS,MAA1D,CAAiE;AAC/D,uCAAuB1B,QAAQ,CAACqB,SAAT,CAAmBM,UAAnB,CAA8BC,SAA9B,CAAwC,CAAC,CAAzC;AADwC,eAAjE;;AAbmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA/DR;;AAAA,UAiFbE,oBAjFa,GAiFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,cAAAA,eADe,GACC,IADD;AAAA;AAAA,+CAEC9B,EAAE,CAACkB,UAAH,CAAc,OAAd,EAAuBa,KAAvB,CAA6B,QAA7B,EAAsC,IAAtC,EAA2C,MAAKjB,KAAL,CAAWC,aAAtD,EACnBiB,GADmB,EAFD;;AAAA;AAEfC,cAAAA,OAFe;;AAKnB,kBAAGA,OAAO,CAACC,IAAR,CAAaC,MAAb,IAAqB,CAAxB,EAA0B;AACzBL,gBAAAA,eAAe,GAAC,KAAhB;AACA,eAFD,MAGI;AACHG,gBAAAA,OAAO,CAACC,IAAR,CAAaE,GAAb,CAAiB,UAACZ,GAAD,EAAO;AACvB,sBAAIa,IAAI,GAAGb,GAAG,CAACX,IAAJ,EAAX;;AAEA,sBAAGwB,IAAI,CAACC,gBAAR,EAAyB;AACvBR,oBAAAA,eAAe,GAAC,OAAhB;AACD,mBAFD,MAGI;AACFA,oBAAAA,eAAe,GAAC,QAAhB;AACD;AAED,iBAVD;AAWA;;AApBkB,gDAqBZA,eArBY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAjFR;;AAAA,UAyGbS,4BAzGa,GAyGgB;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBC,cAAAA,eADuB,GACP,IADO;AAE3BC,cAAAA,KAAK,CAAC,MAAK3B,KAAL,CAAWE,gBAAZ,CAAL;AAF2B;AAAA,+CAGPhB,EAAE,CAACkB,UAAH,CAAc,UAAd,EAA0Ba,KAA1B,CAAgC,WAAhC,EAA4C,IAA5C,EAAiD,MAAKjB,KAAL,CAAWE,gBAA5D,EAA8EgB,GAA9E,EAHO;;AAAA;AAGzBU,cAAAA,UAHyB;AAI7BD,cAAAA,KAAK,CAACC,UAAU,CAACR,IAAX,CAAgBC,MAAjB,CAAL;;AACA,kBAAGO,UAAU,CAACR,IAAX,CAAgBC,MAAhB,IAAwB,CAA3B,EAA6B;AAC3BK,gBAAAA,eAAe,GAAC,KAAhB;AACAC,gBAAAA,KAAK,CAAC,4BAAD,CAAL;;AACA,sBAAKlC,QAAL,CAAc;AACZS,kBAAAA,gBAAgB,EAAC,EADL;AAEZD,kBAAAA,aAAa,EAAC;AAFF,iBAAd;AAIA,eAPF,MAQK;AACH2B,gBAAAA,UAAU,CAACR,IAAX,CAAgBE,GAAhB,CAAoB,UAACZ,GAAD,EAAO;AAC1B,sBAAImB,OAAO,GAAGnB,GAAG,CAACX,IAAJ,EAAd;;AAEA,sBAAG8B,OAAO,CAACC,mBAAR,GAA4B,CAA/B,EAAiC;AAChCJ,oBAAAA,eAAe,GAAC,IAAhB;AACA,mBAFD,MAGI;AACHA,oBAAAA,eAAe,GAAC,KAAhB;AACAC,oBAAAA,KAAK,CAAC,oCAAD,CAAL;;AACA,0BAAKlC,QAAL,CAAc;AACZS,sBAAAA,gBAAgB,EAAC,EADL;AAEZD,sBAAAA,aAAa,EAAC;AAFF,qBAAd;AAIA;AAED,iBAfD;AAgBA;;AA9B2B,gDA+BrByB,eA/BqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAzGhB;;AAAA,UA6IbK,6BA7Ia,GA6IiB;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBL,cAAAA,eADwB,GACR,IADQ;AAAA;AAAA,+CAEFxC,EAAE,CAACkB,UAAH,CAAc,cAAd,EAA8Ba,KAA9B,CAAoC,QAApC,EAA6C,IAA7C,EAAkD,MAAKjB,KAAL,CAAWC,aAA7D,EAA4E+B,KAA5E,CAAkF,CAAlF,EAAqFd,GAArF,EAFE;;AAAA;AAExBe,cAAAA,cAFwB;AAK1BA,cAAAA,cAAc,CAACb,IAAf,CAAoBE,GAApB,CAAwB,UAACZ,GAAD,EAAO;AAC9B,oBAAIwB,QAAQ,GAAGxB,GAAG,CAACX,IAAJ,EAAf;;AAEA,oBAAGmC,QAAQ,CAACC,SAAT,IAAoB,MAAKnC,KAAL,CAAWE,gBAAlC,EAAmD;AAClDwB,kBAAAA,eAAe,GAAC,IAAhB;AACA,iBAFD,MAGI;AACHA,kBAAAA,eAAe,GAAC,KAAhB;AACAC,kBAAAA,KAAK,CAAC,oCAAD,CAAL;;AACA,wBAAKlC,QAAL,CAAc;AACZS,oBAAAA,gBAAgB,EAAC,EADL;AAEZD,oBAAAA,aAAa,EAAC;AAFF,mBAAd;AAIA;AAED,eAfD;AAL0B,gDAsBpByB,eAtBoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA7IjB;;AAAA,UA4KbU,iBA5Ka,GA4KO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEQ,MAAKrB,oBAAL,EAFR;;AAAA;AAEdC,cAAAA,eAFc;;AAAA,kBAIdA,eAJc;AAAA;AAAA;AAAA;;AAKlBW,cAAAA,KAAK,CAAC,qCAAD,CAAL;;AACE,oBAAKlC,QAAL,CACC;AACEQ,gBAAAA,aAAa,EAAC,EADhB;AAEEC,gBAAAA,gBAAgB,EAAC;AAFnB,eADD;;AANgB;AAAA;;AAAA;AAAA,oBAcVc,eAAe,KAAG,OAdR;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAeY,MAAKS,4BAAL,EAfZ;;AAAA;AAeZC,cAAAA,eAfY;;AAiBhB,kBAAGA,eAAH,EAAmB;AACjB,sBAAKvB,iBAAL;;AACAwB,gBAAAA,KAAK,CAAC,6BAAD,CAAL;AACD;;AApBe;AAAA;;AAAA;AAAA,oBAsBVX,eAAe,KAAG,QAtBR;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAuBY,MAAKe,6BAAL,EAvBZ;;AAAA;AAuBZL,cAAAA,eAvBY;;AAyBhB,kBAAGA,eAAH,EAAmB;AACjB,sBAAKZ,kBAAL;;AACDa,gBAAAA,KAAK,CAAC,+BAAD,CAAL;AACA;;AA5Be;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA5KP;;AAEX,UAAK3B,KAAL,GAAa;AACXN,MAAAA,oBAAoB,EAAE,IADX;AAEXE,MAAAA,OAAO,EAAE,KAFE;AAGXK,MAAAA,aAAa,EAAE,EAHJ;AAIXC,MAAAA,gBAAgB,EAAC,EAJN;AAKXP,MAAAA,WAAW,EAAE,QALF;AAMX0C,MAAAA,kBAAkB,EAAE;AANT,KAAb;AAFW;AAUZ;;;;6BAoMQ;AAAA;;AACP,UAAM3C,oBAAoB,GAAG,KAAKM,KAAL,CAAWN,oBAAxC;AACA,UAAME,OAAO,GAAG,KAAKI,KAAL,CAAWJ,OAA3B;AACA,UAAMD,WAAW,GAAG,KAAKK,KAAL,CAAWL,WAA/B;;AAEA,UAAIA,WAAW,KAAK,QAAhB,IAA4BD,oBAAhC,EAAqD;AACnD,eACE,oBAAC,cAAD;AACE,UAAA,gBAAgB,EAAEE,OAAO,GAAG0C,SAAH,GAAe,KAAKzC,oBAD/C;AAEE,UAAA,KAAK,EAAE0C,UAAU,CAACC,kBAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,OAPD,MASK,IAAI7C,WAAW,KAAK,QAApB,EAA6B;AAChC,eACE,oBAAC,oBAAD;AAAuB,UAAA,KAAK,EAAE8C,MAAM,CAACC,SAArC;AAAgD,UAAA,QAAQ,EAAC,SAAzD;AAAmE,UAAA,OAAO,MAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AACE,UAAA,MAAM,EAAEC,OAAO,0BADjB;AAEE,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAC,GAAP;AAAYC,YAAAA,MAAM,EAAE;AAApB,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAIE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAE,QAAZ;AAAsBC,YAAAA,QAAQ,EAAE;AAAhC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CADF,EAOE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEN,MAAM,CAACO,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,SAAD;AACE,UAAA,KAAK,EAAEP,MAAM,CAACQ,QADhB;AAEE,UAAA,WAAW,EAAC,SAFd;AAGE,UAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,mBAAG,MAAI,CAACzD,QAAL,CAAc;AAACQ,cAAAA,aAAa,EAACiD;AAAf,aAAd,CAAH;AAAA,WAHpB;AAIE,UAAA,KAAK,EAAE,KAAKlD,KAAL,CAAWC,aAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,EAMA,oBAAC,gBAAD;AACE,UAAA,KAAK,EAAEwC,MAAM,CAACU,UADhB;AAEE,UAAA,OAAO,EAAE,mBAAI;AACX,YAAA,MAAI,CAAC/D,oBAAL,CAA0B,QAA1B;AACD,WAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEqD,MAAM,CAACW,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,CANA,CAPF,EAsBE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEX,MAAM,CAACO,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,SAAD;AACE,UAAA,KAAK,EAAEP,MAAM,CAACQ,QADhB;AAEE,UAAA,WAAW,EAAC,YAFd;AAGE,UAAA,YAAY,EAAG,sBAAAC,IAAI;AAAA,mBAAI,MAAI,CAACzD,QAAL,CAAc;AAACS,cAAAA,gBAAgB,EAACgD;AAAlB,aAAd,CAAJ;AAAA,WAHrB;AAIE,UAAA,KAAK,EAAE,KAAKlD,KAAL,CAAWE,gBAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,EAMA,oBAAC,gBAAD;AACE,UAAA,KAAK,EAAEuC,MAAM,CAACU,UADhB;AAEE,UAAA,OAAO,EAAE,mBAAI;AACX,YAAA,MAAI,CAAC/D,oBAAL,CAA0B,WAA1B;AACD,WAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEqD,MAAM,CAACW,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,CANA,CAtBF,EAoCE,oBAAC,gBAAD;AACE,UAAA,KAAK,EAAEX,MAAM,CAACY,YADhB;AAEE,UAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AACHhB,oBAAAA,kBADG,GACkB,MAAI,CAACD,iBAAL,EADlB;;AAEP,oBAAA,MAAI,CAAC3C,QAAL,CACE;AAACQ,sBAAAA,aAAa,EAAC,EAAf;AACCC,sBAAAA,gBAAgB,EAAC;AADlB,qBADF;;AAFO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAQF,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEuC,MAAM,CAACa,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARE,CApCF,CADF;AAiDD;AACF;;;;EAhR0CxE,KAAK,CAACyE,S;;SAAhCpE,iB;AAmRnB,IAAMsD,MAAM,GAAGF,UAAU,CAACiB,MAAX,CAAkB;AAC/Bd,EAAAA,SAAS,EAAE;AACTe,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE;AAHH,GADoB;AAM/BC,EAAAA,WAAW,EAAC;AACVb,IAAAA,QAAQ,EAAE,EADA;AAEVc,IAAAA,kBAAkB,EAAE;AAFV,GANmB;AAU/BV,EAAAA,UAAU,EAAC;AACTW,IAAAA,eAAe,EAAE,SADR;AAETC,IAAAA,OAAO,EAAE,EAFA;AAGTC,IAAAA,MAAM,EAAE;AAHC,GAVoB;AAe/BZ,EAAAA,UAAU,EAAC;AACTL,IAAAA,QAAQ,EAAE,EADD;AAETD,IAAAA,SAAS,EAAE,QAFF;AAGTmB,IAAAA,SAAS,EAAE;AAHF,GAfoB;AAoB/BjB,EAAAA,SAAS,EAAC;AACRkB,IAAAA,aAAa,EAAE,KADP;AAERF,IAAAA,MAAM,EAAE;AAFA,GApBqB;AAwB/Bf,EAAAA,QAAQ,EAAC;AACPL,IAAAA,KAAK,EAAE,GADA;AAEPC,IAAAA,MAAM,EAAE,EAFD;AAGPsB,IAAAA,WAAW,EAAE,GAHN;AAIPC,IAAAA,gBAAgB,EAAE,CAJX;AAKPrB,IAAAA,QAAQ,EAAE;AALH,GAxBsB;AA+B/BI,EAAAA,UAAU,EAAC;AACTW,IAAAA,eAAe,EAAE,SADR;AAETlB,IAAAA,KAAK,EAAE,EAFE;AAGTuB,IAAAA,WAAW,EAAE,GAHJ;AAITE,IAAAA,eAAe,EAAE;AAJR,GA/BoB;AAqC/BhB,EAAAA,YAAY,EAAC;AACXS,IAAAA,eAAe,EAAE,SADN;AAEXlB,IAAAA,KAAK,EAAE,GAFI;AAGXC,IAAAA,MAAM,EAAC;AAHI,GArCkB;AA0C/BS,EAAAA,gBAAgB,EAAC;AACfS,IAAAA,OAAO,EAAE,EADM;AAEfjB,IAAAA,SAAS,EAAE,QAFI;AAGfC,IAAAA,QAAQ,EAAE,EAHK;AAIfuB,IAAAA,UAAU,EAAC,MAJI;AAKfC,IAAAA,KAAK,EAAE;AALQ;AA1Cc,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport { Text,\r\n   View,\r\n   TouchableOpacity,\r\n   TextInput,\r\n   Image,\r\n   StyleSheet,\r\n  KeyboardAvoidingView ,\r\nToastAndroid,Alert} from 'react-native';\r\nimport * as Permissions from 'expo-permissions';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\nimport * as firebase from 'firebase'\r\nimport db from '../config.js'\r\n\r\nexport default class TransactionScreen extends React.Component {\r\n    constructor(){\r\n      super();\r\n      this.state = {\r\n        hasCameraPermissions: null,\r\n        scanned: false,\r\n        scannedBookId: '',\r\n        scannedStudentId:'',\r\n        buttonState: 'normal',\r\n        transactionMessage: ''\r\n      }\r\n    }\r\n\r\n    getCameraPermissions = async (id) =>{\r\n      const {status} = await Permissions.askAsync(Permissions.CAMERA);\r\n      \r\n      this.setState({\r\n        /*status === \"granted\" is true when user has granted permission\r\n          status === \"granted\" is false when user has not granted the permission\r\n        */\r\n        hasCameraPermissions: status === \"granted\",\r\n        buttonState: id,\r\n        scanned: false\r\n      });\r\n    }\r\n\r\n    handleBarCodeScanned = async({type, data})=>{\r\n      const {buttonState} = this.state\r\n\r\n      if(buttonState===\"BookId\"){\r\n        this.setState({\r\n          scanned: true,\r\n          scannedBookId: data,\r\n          buttonState: 'normal'\r\n        });\r\n      }\r\n      else if(buttonState===\"StudentId\"){\r\n        this.setState({\r\n          scanned: true,\r\n          scannedStudentId: data,\r\n          buttonState: 'normal'\r\n        });\r\n      }\r\n      \r\n    }\r\n\r\n    initiateBookIssue = async()=>{\r\n      //add a transaction\r\n      db.collection(\"transactions\").add({\r\n        'studentId': this.state.scannedStudentId,\r\n        'bookId' : this.state.scannedBookId,\r\n        'date' : firebase.firestore.Timestamp.now().toDate(),\r\n        'transactionType': \"Issue\"\r\n      })\r\n      //change book status\r\n      db.collection(\"books\").doc(this.state.scannedBookId).update({\r\n        'bookAvailability': false\r\n      })\r\n      //change number  of issued books for student\r\n      db.collection(\"student\").doc(this.state.scannedStudentId).update({\r\n        'numberOfBooksIssued': firebase.firestore.FieldValue.increment(1)\r\n      })\r\n    }\r\n\r\n    initiateBookReturn = async()=>{\r\n      //add a transaction\r\n      db.collection(\"transactions\").add({\r\n        'StudentId': this.state.scannedStudentId,\r\n        'bookId' : this.state.scannedBookId,\r\n        'date' : firebase.firestore.Timestamp.now().toDate(),\r\n        'transactionType': \"Return\"\r\n      })\r\n      //change book status\r\n      db.collection(\"books\").doc(this.state.scannedBookId).update({\r\n        'bookAvailability': true\r\n      })\r\n      //change number  of issued books for student\r\n      db.collection(\"student\").doc(this.state.scannedStudentId).update({\r\n        'numberOfBooksIssued': firebase.firestore.FieldValue.increment(-1)\r\n      })\r\n    }\r\n\r\n    checkBookEligibility=async()=>{\r\n      var transactionType=null\r\n      var bookRef = await db.collection(\"books\").where(\"bookId\",\"==\",this.state.scannedBookId)\r\n      .get()\r\n\r\n      if(bookRef.docs.length==0){\r\n       transactionType=false\r\n      }\r\n      else{\r\n       bookRef.docs.map((doc)=>{\r\n        var book = doc.data()\r\n\r\n        if(book.bookAvailability){\r\n          transactionType=\"Issue\"\r\n        }\r\n        else{\r\n          transactionType=\"Return\"\r\n        }\r\n\r\n       })\r\n      }\r\n      return transactionType\r\n    }\r\n     \r\n    checkStudentEligibilityIssue=async ()=>{\r\n      var studentEligible=null\r\n      alert(this.state.scannedStudentId)\r\n    var studentRef= await db.collection(\"students\").where(\"studentId\",\"==\",this.state.scannedStudentId).get()\r\n    alert(studentRef.docs.length)\r\n    if(studentRef.docs.length==0){\r\n      studentEligible=false\r\n      alert(\"This student doesn't exist\")\r\n      this.setState({\r\n        scannedStudentId:\"\",\r\n        scannedBookId:\"\"\r\n      })\r\n     }\r\n     else{\r\n      studentRef.docs.map((doc)=>{\r\n       var student = doc.data()\r\n\r\n       if(student.numberOfBooksIssued<2){\r\n        studentEligible=true\r\n       }\r\n       else{\r\n        studentEligible=false\r\n        alert(\"Student has already issued 2 books\")\r\n        this.setState({\r\n          scannedStudentId:\"\",\r\n          scannedBookId:\"\"\r\n        }) \r\n       }\r\n\r\n      })\r\n     }\r\n     return studentEligible\r\n    }\r\n    \r\n\r\n  \r\n    checkStudentEligibilityReturn=async()=>{\r\n      var studentEligible=null\r\n      var transactionRef= await db.collection(\"transactions\").where(\"bookId\",\"==\",this.state.scannedBookId).limit(1).get()\r\n  \r\n       \r\n        transactionRef.docs.map((doc)=>{\r\n         var lastBook = doc.data()\r\n  \r\n         if(lastBook.StudentId==this.state.scannedStudentId){\r\n          studentEligible=true\r\n         }\r\n         else{\r\n          studentEligible=false\r\n          alert(\"Book wasn't issued by this student\")\r\n          this.setState({\r\n            scannedStudentId:\"\",\r\n            scannedBookId:\"\"\r\n          }) \r\n         }\r\n  \r\n        })\r\n       \r\n       return studentEligible\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    handleTransaction = async()=>{\r\n      \r\n      var transactionType=await this.checkBookEligibility()\r\n\r\n      if(!transactionType){\r\n      alert(\"Book doesn't exist in this database\")\r\n        this.setState(\r\n         {\r\n           scannedBookId:\"\",\r\n           scannedStudentId:\"\"\r\n         } \r\n         \r\n        )\r\n      }\r\n      else if(transactionType===\"Issue\"){\r\n        var studentEligible = await this.checkStudentEligibilityIssue()\r\n\r\n        if(studentEligible){\r\n          this.initiateBookIssue()\r\n          alert(\"Book issued to this student\")\r\n        }\r\n      }\r\n      else if(transactionType===\"Return\"){\r\n        var studentEligible = await this.checkStudentEligibilityReturn()\r\n\r\n        if(studentEligible){\r\n          this.initiateBookReturn()\r\n         alert(\"Book returned by this student\")\r\n        }\r\n      }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n      const hasCameraPermissions = this.state.hasCameraPermissions;\r\n      const scanned = this.state.scanned;\r\n      const buttonState = this.state.buttonState;\r\n\r\n      if (buttonState !== \"normal\" && hasCameraPermissions){\r\n        return(\r\n          <BarCodeScanner\r\n            onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\r\n            style={StyleSheet.absoluteFillObject}\r\n          />\r\n        );\r\n      }\r\n\r\n      else if (buttonState === \"normal\"){\r\n        return(\r\n          <KeyboardAvoidingView  style={styles.container} behavior=\"padding\" enabled>\r\n            <View>\r\n              <Image\r\n                source={require(\"../assets/booklogo.jpg\")}\r\n                style={{width:200, height: 200}}/>\r\n              <Text style={{textAlign: 'center', fontSize: 30}}>Wily</Text>\r\n            </View>\r\n            <View style={styles.inputView}>\r\n            <TextInput \r\n              style={styles.inputBox}\r\n              placeholder=\"Book Id\"\r\n              onChangeText={text =>this.setState({scannedBookId:text})}\r\n              value={this.state.scannedBookId}/>\r\n            <TouchableOpacity \r\n              style={styles.scanButton}\r\n              onPress={()=>{\r\n                this.getCameraPermissions(\"BookId\")\r\n              }}>\r\n              <Text style={styles.buttonText}>Scan</Text>\r\n            </TouchableOpacity>\r\n            </View>\r\n\r\n            <View style={styles.inputView}>\r\n            <TextInput \r\n              style={styles.inputBox}\r\n              placeholder=\"Student Id\"\r\n              onChangeText ={text => this.setState({scannedStudentId:text})}\r\n              value={this.state.scannedStudentId}/>\r\n            <TouchableOpacity \r\n              style={styles.scanButton}\r\n              onPress={()=>{\r\n                this.getCameraPermissions(\"StudentId\")\r\n              }}>\r\n              <Text style={styles.buttonText}>Scan</Text>\r\n            </TouchableOpacity>\r\n            </View>\r\n            <TouchableOpacity\r\n              style={styles.submitButton}\r\n              onPress={async()=>{\r\n                var transactionMessage = this.handleTransaction();\r\n                this.setState(\r\n                  {scannedBookId:'',\r\n                   scannedStudentId:''})\r\n              }}>\r\n          <Text style={styles.submitButtonText}>Submit</Text>\r\n            </TouchableOpacity>\r\n          </KeyboardAvoidingView>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    },\r\n    displayText:{\r\n      fontSize: 15,\r\n      textDecorationLine: 'underline'\r\n    },\r\n    scanButton:{\r\n      backgroundColor: '#2196F3',\r\n      padding: 10,\r\n      margin: 10\r\n    },\r\n    buttonText:{\r\n      fontSize: 15,\r\n      textAlign: 'center',\r\n      marginTop: 10\r\n    },\r\n    inputView:{\r\n      flexDirection: 'row',\r\n      margin: 20\r\n    },\r\n    inputBox:{\r\n      width: 200,\r\n      height: 40,\r\n      borderWidth: 1.5,\r\n      borderRightWidth: 0,\r\n      fontSize: 20\r\n    },\r\n    scanButton:{\r\n      backgroundColor: '#66BB6A',\r\n      width: 50,\r\n      borderWidth: 1.5,\r\n      borderLeftWidth: 0\r\n    },\r\n    submitButton:{\r\n      backgroundColor: '#FBC02D',\r\n      width: 100,\r\n      height:50\r\n    },\r\n    submitButtonText:{\r\n      padding: 10,\r\n      textAlign: 'center',\r\n      fontSize: 20,\r\n      fontWeight:\"bold\",\r\n      color: 'white'\r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}