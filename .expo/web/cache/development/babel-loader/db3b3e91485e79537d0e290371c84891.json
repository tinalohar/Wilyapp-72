{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AnimatedValue from \"../core/InternalAnimatedValue\";\nimport Animation from \"./Animation\";\nimport SpringConfig from \"../SpringConfig\";\nimport spring from \"./spring\";\nimport { block, clockRunning, startClock, stopClock, cond } from \"../base\";\nimport Clock from \"../core/AnimatedClock\";\nimport invariant from 'fbjs/lib/invariant';\n\nfunction withDefault(value, defaultValue) {\n  if (value === undefined || value === null) {\n    return defaultValue;\n  }\n\n  return value;\n}\n\nvar SpringAnimation = function (_Animation) {\n  _inherits(SpringAnimation, _Animation);\n\n  var _super = _createSuper(SpringAnimation);\n\n  function SpringAnimation(config) {\n    var _this;\n\n    _classCallCheck(this, SpringAnimation);\n\n    _this = _super.call(this);\n    _this._overshootClamping = withDefault(config.overshootClamping, false);\n    _this._restDisplacementThreshold = withDefault(config.restDisplacementThreshold, 0.001);\n    _this._restSpeedThreshold = withDefault(config.restSpeedThreshold, 0.001);\n    _this._initialVelocity = withDefault(config.velocity, 0);\n    _this._lastVelocity = withDefault(config.velocity, 0);\n    _this._toValue = config.toValue;\n    _this._delay = withDefault(config.delay, 0);\n\n    if (config.stiffness !== undefined || config.damping !== undefined || config.mass !== undefined) {\n      invariant(config.bounciness === undefined && config.speed === undefined && config.tension === undefined && config.friction === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      _this._stiffness = withDefault(config.stiffness, 100);\n      _this._damping = withDefault(config.damping, 10);\n      _this._mass = withDefault(config.mass, 1);\n    } else if (config.bounciness !== undefined || config.speed !== undefined) {\n      invariant(config.tension === undefined && config.friction === undefined && config.stiffness === undefined && config.damping === undefined && config.mass === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      var springConfig = SpringConfig.fromBouncinessAndSpeed(withDefault(config.bounciness, 8), withDefault(config.speed, 12));\n      _this._stiffness = springConfig.stiffness;\n      _this._damping = springConfig.damping;\n      _this._mass = 1;\n    } else {\n      var _springConfig = SpringConfig.fromOrigamiTensionAndFriction(withDefault(config.tension, 40), withDefault(config.friction, 7));\n\n      _this._stiffness = _springConfig.stiffness;\n      _this._damping = _springConfig.damping;\n      _this._mass = 1;\n    }\n\n    invariant(_this._stiffness > 0, 'Stiffness value must be greater than 0');\n    invariant(_this._damping > 0, 'Damping value must be greater than 0');\n    invariant(_this._mass > 0, 'Mass value must be greater than 0');\n    return _this;\n  }\n\n  _createClass(SpringAnimation, [{\n    key: \"start\",\n    value: function start(value) {\n      this._clock = new Clock();\n      var state = {\n        finished: new AnimatedValue(0),\n        velocity: new AnimatedValue(this._initialVelocity),\n        position: value,\n        time: new AnimatedValue(0)\n      };\n      var config = {\n        damping: this._damping,\n        mass: this._mass,\n        stiffness: this._stiffness,\n        toValue: this._toValue,\n        overshootClamping: this._overshootClamping,\n        restSpeedThreshold: this._restSpeedThreshold,\n        restDisplacementThreshold: this._restDisplacementThreshold\n      };\n      return block([cond(clockRunning(this._clock), 0, [startClock(this._clock)]), spring(this._clock, state, config), cond(state.finished, stopClock(this._clock))]);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {}\n  }], [{\n    key: \"getDefaultState\",\n    value: function getDefaultState() {\n      return {\n        position: new AnimatedValue(0),\n        finished: new AnimatedValue(0),\n        velocity: new AnimatedValue(0),\n        time: new AnimatedValue(0)\n      };\n    }\n  }]);\n\n  return SpringAnimation;\n}(Animation);\n\nexport { SpringAnimation as default };","map":{"version":3,"sources":["E:/Projects/ZENE/C68-transaction-and-search/node_modules/react-native-reanimated/src/animations/SpringAnimation.js"],"names":["AnimatedValue","Animation","SpringConfig","spring","block","clockRunning","startClock","stopClock","cond","Clock","invariant","withDefault","value","defaultValue","undefined","SpringAnimation","config","_overshootClamping","overshootClamping","_restDisplacementThreshold","restDisplacementThreshold","_restSpeedThreshold","restSpeedThreshold","_initialVelocity","velocity","_lastVelocity","_toValue","toValue","_delay","delay","stiffness","damping","mass","bounciness","speed","tension","friction","_stiffness","_damping","_mass","springConfig","fromBouncinessAndSpeed","fromOrigamiTensionAndFriction","_clock","state","finished","position","time"],"mappings":"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","sourcesContent":["import AnimatedValue from '../core/InternalAnimatedValue';\r\nimport Animation from './Animation';\r\nimport SpringConfig from '../SpringConfig';\r\nimport spring from './spring';\r\n\r\nimport { block, clockRunning, startClock, stopClock, cond } from '../base';\r\nimport Clock from '../core/AnimatedClock';\r\n\r\nimport invariant from 'fbjs/lib/invariant';\r\n\r\nfunction withDefault(value, defaultValue) {\r\n  if (value === undefined || value === null) {\r\n    return defaultValue;\r\n  }\r\n  return value;\r\n}\r\n\r\nexport default class SpringAnimation extends Animation {\r\n  constructor(config) {\r\n    super();\r\n\r\n    this._overshootClamping = withDefault(config.overshootClamping, false);\r\n    this._restDisplacementThreshold = withDefault(\r\n      config.restDisplacementThreshold,\r\n      0.001\r\n    );\r\n    this._restSpeedThreshold = withDefault(config.restSpeedThreshold, 0.001);\r\n    this._initialVelocity = withDefault(config.velocity, 0);\r\n    this._lastVelocity = withDefault(config.velocity, 0);\r\n    this._toValue = config.toValue;\r\n    this._delay = withDefault(config.delay, 0);\r\n\r\n    if (\r\n      config.stiffness !== undefined ||\r\n      config.damping !== undefined ||\r\n      config.mass !== undefined\r\n    ) {\r\n      invariant(\r\n        config.bounciness === undefined &&\r\n          config.speed === undefined &&\r\n          config.tension === undefined &&\r\n          config.friction === undefined,\r\n        'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one'\r\n      );\r\n      this._stiffness = withDefault(config.stiffness, 100);\r\n      this._damping = withDefault(config.damping, 10);\r\n      this._mass = withDefault(config.mass, 1);\r\n    } else if (config.bounciness !== undefined || config.speed !== undefined) {\r\n      // Convert the origami bounciness/speed values to stiffness/damping\r\n      // We assume mass is 1.\r\n      invariant(\r\n        config.tension === undefined &&\r\n          config.friction === undefined &&\r\n          config.stiffness === undefined &&\r\n          config.damping === undefined &&\r\n          config.mass === undefined,\r\n        'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one'\r\n      );\r\n      const springConfig = SpringConfig.fromBouncinessAndSpeed(\r\n        withDefault(config.bounciness, 8),\r\n        withDefault(config.speed, 12)\r\n      );\r\n      this._stiffness = springConfig.stiffness;\r\n      this._damping = springConfig.damping;\r\n      this._mass = 1;\r\n    } else {\r\n      // Convert the origami tension/friction values to stiffness/damping\r\n      // We assume mass is 1.\r\n      const springConfig = SpringConfig.fromOrigamiTensionAndFriction(\r\n        withDefault(config.tension, 40),\r\n        withDefault(config.friction, 7)\r\n      );\r\n      this._stiffness = springConfig.stiffness;\r\n      this._damping = springConfig.damping;\r\n      this._mass = 1;\r\n    }\r\n\r\n    invariant(this._stiffness > 0, 'Stiffness value must be greater than 0');\r\n    invariant(this._damping > 0, 'Damping value must be greater than 0');\r\n    invariant(this._mass > 0, 'Mass value must be greater than 0');\r\n  }\r\n\r\n  start(value) {\r\n    this._clock = new Clock();\r\n    const state = {\r\n      finished: new AnimatedValue(0),\r\n      velocity: new AnimatedValue(this._initialVelocity),\r\n      position: value,\r\n      time: new AnimatedValue(0),\r\n    };\r\n\r\n    const config = {\r\n      damping: this._damping,\r\n      mass: this._mass,\r\n      stiffness: this._stiffness,\r\n      toValue: this._toValue,\r\n      overshootClamping: this._overshootClamping,\r\n      restSpeedThreshold: this._restSpeedThreshold,\r\n      restDisplacementThreshold: this._restDisplacementThreshold,\r\n    };\r\n\r\n    return block([\r\n      cond(clockRunning(this._clock), 0, [startClock(this._clock)]),\r\n      spring(this._clock, state, config),\r\n      cond(state.finished, stopClock(this._clock)),\r\n    ]);\r\n  }\r\n\r\n  stop() {\r\n    // this._finished && this._finished.setValue(1);\r\n  }\r\n\r\n  static getDefaultState() {\r\n    return {\r\n      position: new AnimatedValue(0),\r\n      finished: new AnimatedValue(0),\r\n      velocity: new AnimatedValue(0),\r\n      time: new AnimatedValue(0),\r\n    };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}