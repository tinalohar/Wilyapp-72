{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\Projects\\\\ZENE\\\\C68-transaction-and-search\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { createAppContainer } from 'react-navigation';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\nimport TransactionScreen from \"./screens/BookTransactionScreen\";\nimport SearchScreen from \"./screens/SearchScreen\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(AppContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar TabNavigator = createBottomTabNavigator({\n  Transaction: {\n    screen: TransactionScreen\n  },\n  Search: {\n    screen: SearchScreen\n  }\n}, {\n  defaultNavigationOptions: function defaultNavigationOptions(_ref) {\n    var navigation = _ref.navigation;\n    return {\n      tabBarIcon: function tabBarIcon() {\n        var routeName = navigation.state.routeName;\n        console.log(routeName);\n\n        if (routeName === \"Transaction\") {\n          return React.createElement(Image, {\n            source: require(\"./assets/book.png\"),\n            style: {\n              width: 40,\n              height: 40\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 11\n            }\n          });\n        } else if (routeName === \"Search\") {\n          return React.createElement(Image, {\n            source: require(\"./assets/searchingbook.png\"),\n            style: {\n              width: 40,\n              height: 40\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 11\n            }\n          });\n        }\n      }\n    };\n  }\n});\nvar AppContainer = createAppContainer(TabNavigator);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'red',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["E:/Projects/ZENE/C68-transaction-and-search/App.js"],"names":["React","createAppContainer","createBottomTabNavigator","TransactionScreen","SearchScreen","App","Component","TabNavigator","Transaction","screen","Search","defaultNavigationOptions","navigation","tabBarIcon","routeName","state","console","log","require","width","height","AppContainer","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,wBAAT,QAAyC,uBAAzC;AAEA,OAAOC,iBAAP;AACA,OAAOC,YAAP;;IAEqBC,G;;;;;;;;;;;;;6BACX;AACN,aAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AAKD;;;;EAP8BL,KAAK,CAACM,S;;SAAlBD,G;AAUrB,IAAME,YAAY,GAAGL,wBAAwB,CAAC;AAC5CM,EAAAA,WAAW,EAAE;AAACC,IAAAA,MAAM,EAAEN;AAAT,GAD+B;AAE5CO,EAAAA,MAAM,EAAE;AAACD,IAAAA,MAAM,EAAEL;AAAT;AAFoC,CAAD,EAI7C;AACEO,EAAAA,wBAAwB,EAAE;AAAA,QAAEC,UAAF,QAAEA,UAAF;AAAA,WAAiB;AACzCC,MAAAA,UAAU,EAAE,sBAAI;AACd,YAAMC,SAAS,GAAGF,UAAU,CAACG,KAAX,CAAiBD,SAAnC;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;;AACA,YAAGA,SAAS,KAAK,aAAjB,EAA+B;AAC7B,iBACE,oBAAC,KAAD;AACA,YAAA,MAAM,EAAEI,OAAO,qBADf;AAEA,YAAA,KAAK,EAAE;AAACC,cAAAA,KAAK,EAAC,EAAP;AAAWC,cAAAA,MAAM,EAAC;AAAlB,aAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,SARD,MASK,IAAGN,SAAS,KAAK,QAAjB,EAA0B;AAC7B,iBACE,oBAAC,KAAD;AACA,YAAA,MAAM,EAAEI,OAAO,8BADf;AAEA,YAAA,KAAK,EAAE;AAACC,cAAAA,KAAK,EAAC,EAAP;AAAWC,cAAAA,MAAM,EAAC;AAAlB,aAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;AACF;AArBwC,KAAjB;AAAA;AAD5B,CAJ6C,CAA7C;AA+BA,IAAMC,YAAY,GAAIpB,kBAAkB,CAACM,YAAD,CAAxC;AAEA,IAAMe,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,KAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View, Image } from 'react-native';\r\nimport { createAppContainer } from 'react-navigation';\r\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\r\n\r\nimport TransactionScreen from './screens/BookTransactionScreen';\r\nimport SearchScreen from './screens/SearchScreen';\r\n\r\nexport default class App extends React.Component {\r\n  render(){\r\n    return (\r\n      \r\n        <AppContainer />\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst TabNavigator = createBottomTabNavigator({\r\n  Transaction: {screen: TransactionScreen},\r\n  Search: {screen: SearchScreen},\r\n},\r\n{\r\n  defaultNavigationOptions: ({navigation})=>({\r\n    tabBarIcon: ()=>{\r\n      const routeName = navigation.state.routeName;\r\n      console.log(routeName)\r\n      if(routeName === \"Transaction\"){\r\n        return(\r\n          <Image\r\n          source={require(\"./assets/book.png\")}\r\n          style={{width:40, height:40}}\r\n        />\r\n        )\r\n        \r\n      }\r\n      else if(routeName === \"Search\"){\r\n        return(\r\n          <Image\r\n          source={require(\"./assets/searchingbook.png\")}\r\n          style={{width:40, height:40}}\r\n        />)\r\n        \r\n      }\r\n    }\r\n  })\r\n}\r\n);\r\n\r\nconst AppContainer =  createAppContainer(TabNavigator);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'red',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}